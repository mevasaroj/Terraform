#====================== COMMON DB SUBNET GROUP ==============================================================================================
#============================================================================================================================================
resource "aws_db_subnet_group" "aurora-postgresql-subnet" {
  name       = join("-", [local.org, local.csp, local.region, local.account, local.vpcname, local.env, "aurora-postgresql-subnet"])
  subnet_ids = ["${var.db-subnet-aza}", "${var.db-subnet-azb}", "${var.db-subnet-azc}"]
  tags = merge( { Name = join("-", [local.org, local.csp, local.region, local.account, local.vpcname, local.env, "aurora-postgresql-subnet"]) }, 
    var.additional_tags )
}
#============================================================================================================================================
module "aurora-postgresql" {
  source = "https://github.com/cloudposse/terraform-aws-rds-cluster"

  name            = join("-", [local.org, local.csp, local.region, local.account, local.vpcname, local.env, "aurora-postgresql-cluster"])
  engine          = "aurora-postgresql"
  engine_version  = "16.3"
  master_username = "root"

  instances = {
    1 = {
      db_parameter_group_name = join("-", [local.org, local.csp, local.region, local.account, local.vpcname, local.env, "aurora-postgresql-01"])
      instance_class          = "db.r6g.large"
    }
    2 = {
      db_parameter_group_name = join("-", [local.org, local.csp, local.region, local.account, local.vpcname, local.env, "aurora-postgresql-02"])
      instance_class = "db.r6g.large"
    }
    3 = {
      db_parameter_group_name = join("-", [local.org, local.csp, local.region, local.account, local.vpcname, local.env, "aurora-postgresql-03"])
      instance_class = "db.r6g.large"
      promotion_tier = 15
    }
  }

  # autoscalling configuration for read replicas
  autoscaling_enabled      = true
  autoscaling_min_capacity = 1
  autoscaling_max_capacity = 5
  
  /*
  endpoints = {
    static = {
      identifier     = "static-custom-endpt"
      type           = "ANY"
      static_members = ["static-member-1"]
      tags           = { Endpoint = "static-members" }
    }
    excluded = {
      identifier       = "excluded-custom-endpt"
      type             = "READER"
      excluded_members = ["excluded-member-1"]
      tags             = { Endpoint = "excluded-members" }
    }
  }
*/
  vpc_id               = var.nonpcidss-prod-vpc
  create_security_group = false
  vpc_security_group_ids = ["${var.postgresql-sg}", "${var.nonpcidss-CommonInfraRule-sg}"]
  db_subnet_group_name   = aws_db_subnet_group.aurora-postgresql-subnet.name
  
  # Backup 
  backup_retention_period     = 7
  copy_tags_to_snapshot       = true
  skip_final_snapshot         = true
  apply_immediately           = true
  
  engine_lifecycle_support = "open-source-rds-extended-support-disabled"

  create_db_cluster_parameter_group      = true
  db_cluster_parameter_group_name        = join("-", [local.org, local.csp, local.region, local.account, local.vpcname, local.env, "aurora-postgresql-parameter-cluster-group"])
  db_cluster_parameter_group_family      = "aurora-postgresql16"
  db_cluster_parameter_group_description = "aurora-postgresql cluster parameter group"
  db_cluster_parameter_group_parameters = [
    {
      name         = "log_min_duration_statement"
      value        = 4000
      apply_method = "immediate"
      }, {
      name         = "rds.force_ssl"
      value        = 1
      apply_method = "immediate"
    }
  ]

  create_db_parameter_group      = true
  db_parameter_group_name        = join("-", [local.org, local.csp, local.region, local.account, local.vpcname, local.env, "aurora-postgresql-parameter-group"])
  db_parameter_group_family      = "aurora-postgresql16"
  db_parameter_group_description = "aurora-postgresql DB parameter group"
  db_parameter_group_parameters = [
    {
      name         = "log_min_duration_statement"
      value        = 4000
      apply_method = "immediate"
    }
  ]

  enabled_cloudwatch_logs_exports = ["postgresql"]
  create_cloudwatch_log_group     = false

  create_db_cluster_activity_stream     = true
  db_cluster_activity_stream_kms_key_id = var.kms_key_id
  db_cluster_activity_stream_mode       = "async"

  tags = merge(
    {
      Name = "${join("-", [local.org, local.csp, local.region, local.account, local.vpcname, local.env, "aurora-postgresql-cluster"])}"
    }, var.additional_tags
  )
  
}
#============================================================================================================================================