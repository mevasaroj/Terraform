
##################################################################################################################################################
########### START OF COMMON DB's GROUP     ##############################################
#=================================================================================================================================================

resource "aws_db_subnet_group" "mysql-cluster-subnet" {
  name       = join("-", [local.org, local.csp, local.region, local.account, local.vpcname, local.env, "mysql-cluster-subnet"])
  subnet_ids = ["${var.db-subnet-aza}", "${var.db-subnet-azb}", "${var.db-subnet-azc}"]
  tags = merge( { Name = join("-", [local.org, local.csp, local.region, local.account, local.vpcname, local.env, "mysql-cluster-subnet"]) }, 
    var.additional_tags )
}


#=================================================================================================================================================
########### END OF COMMON DB's GROUP     ##############################################
##################################################################################################################################################
########### START OF RDS CLUSTER - MYSQL  ##############################################
#=================================================================================================================================================
module "mysql-cluster-01" {
  source = "https://github.com/cloudposse/terraform-aws-rds-cluster"

  name            = join("-", [local.org, local.csp, local.region, local.account, local.vpcname, local.env, "mysql-cluster-01"])
  engine          = "mysql"    # This uses RDS engine, not Aurora
  engine_version  = "8.0.37"
  port            = "3356"
  master_username = "root"
  #deletion_protection = true
  
  # Secret Manager
  manage_master_user_password_rotation                   = true
  master_user_password_rotation_automatically_after_days = 90
   
  # VPC, Security Group and Subnet
  vpc_id               = var.nonpcidss-prod-vpc
  create_security_group = false
  vpc_security_group_ids = ["${var.postgresql-sg}", "${var.nonpcidss-CommonInfraRule-sg}"]
  db_subnet_group_name   = aws_db_subnet_group.mysql-cluster-subnet.name
  
  # DB Parameter Groups
  create_db_cluster_parameter_group      = true
  db_cluster_parameter_group_name        = join("-", [local.org, local.csp, local.region, local.account, local.vpcname, local.env, "mysql-cluster-01-parameter-group"])
  db_cluster_parameter_group_family      = "mysql8.0"
  db_cluster_parameter_group_description = "cluster parameter group"
  /*
  db_cluster_parameter_group_parameters = [
    { name  = "log_parser_stats", value = "0", apply_method = "immediate" },     
    { name  = "debug_pretty_print", value = "1", apply_method = "immediate" },
    { name  = "log_executor_stats", value = "0", apply_method = "immediate" },
    { name = "debug_print_rewritten", value = "0", apply_method = "immediate" },
    { name = "log_min_duration_statement", value = "0", apply_method = "immediate" },
    { name = "debug_print_parse", value = "0", apply_method = "immediate" },
    { name = "log_disconnections", value = "1", apply_method = "immediate" },
    { name = "log_planner_stats", value = "0", apply_method = "immediate" },
    { name = "log_connections", value = "1", apply_method = "immediate" },
    { name = "log_hostname", value = "1", apply_method = "immediate" },
    { name = "log_duration", value = "0", apply_method = "immediate" },
    { name = "log_lock_waits", value = "1", apply_method = "immediate" },
    { name = "log_temp_files", value = "-1", apply_method = "immediate" },
    { name = "log_statement", value = "all", apply_method = "immediate" },
    { name = "log_checkpoints", value = "1", apply_method = "immediate" },
    { name = "log_statement_stats", value = "0", apply_method = "immediate" },
    { name = "row_security", value = "1", apply_method = "immediate" }    
  ] 
 */
 
  # Cloudwatch Log Group
  create_cloudwatch_log_group = false
  enabled_cloudwatch_logs_exports = ["general", "audit", "error", "slowquery"]

  # Multi-AZ
  availability_zones        = [ "ap-south-1a", "ap-south-1b", "ap-south-1c" ]
  db_cluster_instance_class = "db.r6gd.large"
  
  # Storage
  allocated_storage     = 50
  storage_type          = "gp3"
  storage_encrypted     = true
  #iops                  = 3000   # Uncomment this once RDS Cluster Created
  kms_key_id            = var.kms_key_id
 
  # Version Update
  publicly_accessible         = false
  allow_major_version_upgrade = false
  auto_minor_version_upgrade  = true
  apply_immediately           = true
  
  # Certificate
  cluster_ca_cert_identifier = "rds-ca-rsa4096-g1"
  
  # Backup 
  backup_retention_period     = 7
  copy_tags_to_snapshot       = true
  skip_final_snapshot         = true

  tags = merge(
    {
      Name = "${join("-", [local.org, local.csp, local.region, local.account, local.vpcname, local.env, "mysql-cluster-01"])}"
    }, var.additional_tags
  )
  
}

#=================================================================================================================================================
########### END OF RDS CLUSTER - MYSQL -01     ##############################################
##################################################################################################################################################
########### START OF RDS CLUSTER - MYSQL -02  ##############################################
#=================================================================================================================================================
module "mysql-cluster-02" {
  source = "../aws-rds-cluster/"

  name            = join("-", [local.org, local.csp, local.region, local.account, local.vpcname, local.env, "mysql-cluster-02"])
  engine          = "mysql"    # This uses RDS engine, not Aurora
  engine_version  = "8.0.37"
  port            = "3356"
  master_username = "root"
  #deletion_protection = true
  
  # Secret Manager
  manage_master_user_password_rotation                   = true
  master_user_password_rotation_automatically_after_days = 90
   
  # VPC, Security Group and Subnet
  vpc_id               = var.nonpcidss-prod-vpc
  create_security_group = false
  vpc_security_group_ids = ["${var.postgresql-sg}", "${var.nonpcidss-CommonInfraRule-sg}"]
  db_subnet_group_name   = aws_db_subnet_group.mysql-cluster-subnet.name
  
  # DB Parameter Groups
  # DB Parameter Groups
  create_db_cluster_parameter_group      = true
  db_cluster_parameter_group_name        = join("-", [local.org, local.csp, local.region, local.account, local.vpcname, local.env, "mysql-cluster-02-parameter-group"])
  db_cluster_parameter_group_family      = "mysql8.0"
  db_cluster_parameter_group_description = "cluster parameter group"
  /*
  db_cluster_parameter_group_parameters = [
    { name  = "log_parser_stats", value = "0", apply_method = "immediate" },     
    { name  = "debug_pretty_print", value = "1", apply_method = "immediate" },
    { name  = "log_executor_stats", value = "0", apply_method = "immediate" },
    { name = "debug_print_rewritten", value = "0", apply_method = "immediate" },
    { name = "log_min_duration_statement", value = "0", apply_method = "immediate" },
    { name = "debug_print_parse", value = "0", apply_method = "immediate" },
    { name = "log_disconnections", value = "1", apply_method = "immediate" },
    { name = "log_planner_stats", value = "0", apply_method = "immediate" },
    { name = "log_connections", value = "1", apply_method = "immediate" },
    { name = "log_hostname", value = "1", apply_method = "immediate" },
    { name = "log_duration", value = "0", apply_method = "immediate" },
    { name = "log_lock_waits", value = "1", apply_method = "immediate" },
    { name = "log_temp_files", value = "-1", apply_method = "immediate" },
    { name = "log_statement", value = "all", apply_method = "immediate" },
    { name = "log_checkpoints", value = "1", apply_method = "immediate" },
    { name = "log_statement_stats", value = "0", apply_method = "immediate" },
    { name = "row_security", value = "1", apply_method = "immediate" }    
  ] 
 */
 
  # Cloudwatch Log Group
  create_cloudwatch_log_group = false
  enabled_cloudwatch_logs_exports = ["general", "audit", "error", "slowquery"]

  # Multi-AZ
  availability_zones        = [ "ap-south-1a", "ap-south-1b", "ap-south-1c" ]
  db_cluster_instance_class = "db.r6gd.large"
  
  # Storage
  allocated_storage     = 50
  storage_type          = "gp3"
  storage_encrypted     = true
  #iops                  = 3000   # Uncomment this once RDS Cluster Created
  kms_key_id            = var.kms_key_id
 
  # Version Update
  publicly_accessible         = false
  allow_major_version_upgrade = false
  auto_minor_version_upgrade  = true
  apply_immediately           = true
  
  # Certificate
  cluster_ca_cert_identifier = "rds-ca-rsa4096-g1"
  
  # Backup 
  backup_retention_period     = 7
  copy_tags_to_snapshot       = true
  skip_final_snapshot         = true

  tags = merge(
    {
      Name = "${join("-", [local.org, local.csp, local.region, local.account, local.vpcname, local.env, "mysql-cluster-02"])}"
    }, var.additional_tags
  )
  
}

#=================================================================================================================================================
########### END OF RDS CLUSTER - MYSQL  - 02   ##############################################
##################################################################################################################################################